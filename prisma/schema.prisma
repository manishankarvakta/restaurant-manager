generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
  // relationMode = "prisma"
}

// model userApiLimit{
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   email String
// }



// model UserSubscription {
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   userId    String   @unique
//   stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
//   stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
//   stripePriceId          String?   @map(name: "stripe_price_id")
//   stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
// }


// USERS SCHEMA 
model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  phone String? @unique
  email String @unique
  username String @unique
  role Role @default(MANAGER)
  address String?
  password String
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
// USER ROLE
enum Role {
  MANAGER
  CHEF
  WAITERS
  CASHIER
  SUPERVISOR
  ACCOUNTANT
}


// // INGREDIENTS CATEGORY / SUB-CATEGORY
// model IngredientCategory {
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   name String
//   photo String?
//   ingredients Ingredient[]
//   status Status @default(ACTIVE)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// // INGREDIENTS
// model Ingredient {
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   name String
//   category IngredientCategory @relation(fields: [categoryId], references: [id])
//   categoryId String? @db.ObjectId
//   subCategory String?
//   details String?
//   nutrition String?
//   unit String?
//   Brand String?
//   photo String?
//   status Status @default(ACTIVE)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// // STATUS
// enum Status {
//   ACTIVE
//   DEACTIVE
// }





